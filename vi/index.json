[
{
	"uri": "/vi/",
	"title": "PrivateLink",
	"tags": [],
	"description": "",
	"content": "Truy cập dịch vụ chia sẻ trên Service Provider từ On-Premise sử dụng PrivateLink và VPN Site to Site Tổng quan Trong bài lab này, chúng ta thực hành về AWS Site-to-Site và PrivateLink Nội dung Giới thiệu Các bước chuẩn bị Tạo máy chủ EC2 Cấu hình VPN Site to Site Cấu hình PrivateLink Kết quả Dọn dẹp tài nguyên "
},
{
	"uri": "/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Giới thiệu về PrivateLink AWS PrivateLink là công nghệ có tính sẵn sàng cao, có khả năng mở rộng mà bạn có thể sử dụng để kết nối riêng VPC với các dịch vụ như thể chúng ở trong VPC của bạn. Bạn không cần sử dụng cổng internet, thiết bị NAT, địa chỉ IP công cộng, kết nối AWS Direct Connect hoặc kết nối VPN Site-to-Site của AWS để cho phép liên lạc với dịch vụ từ các mạng con riêng tư của bạn. Do đó, bạn kiểm soát các điểm cuối API, trang web và dịch vụ cụ thể có thể truy cập được từ VPC của mình.\nService providers Chủ sở hữu của một dịch vụ là người cung cấp dịch vụ. Các nhà cung cấp dịch vụ bao gồm AWS, Đối tác AWS và các tài khoản AWS khác. Nhà cung cấp dịch vụ có thể lưu trữ dịch vụ của họ bằng tài nguyên AWS, chẳng hạn như EC2 Instance hoặc sử dụng máy chủ tại chỗ.\nEndpoint services Nhà cung cấp dịch vụ tạo endpoint services để cung cấp dịch vụ của họ trong Region. Nhà cung cấp dịch vụ phải chỉ định bộ cân bằng tải khi tạo endpoint service. Bộ cân bằng tải nhận yêu cầu từ người sử dụng dịch vụ và chuyển chúng đến dịch vụ của bạn. Theo mặc định, endpoint service của bạn không có sẵn cho người tiêu dùng dịch vụ. Bạn phải thêm các quyền cho phép các nguyên tắc AWS cụ thể kết nối với dịch vụ điểm cuối của bạn.\nService names Mỗi endpoint service được xác định bằng tên dịch vụ. Người sử dụng dịch vụ phải chỉ định tên của dịch vụ khi tạo VPC endpoint. Người sử dụng dịch vụ có thể truy vấn tên dịch vụ cho các dịch vụ AWS. Các nhà cung cấp dịch vụ phải chia sẻ tên dịch vụ của họ với người tiêu dùng dịch vụ.\nService states Sau đây là các trạng thái có thể có của endpoint service:\nPending - endpoint service đang được tạo. Available - endpoint service hiện có sẵn. Failed - Không thể tạo endpoint service. Deleting - Nhà cung cấp dịch vụ đã xóa endpoint service và quá trình xóa đang diễn ra. Deleted - endpoint service đã bị xóa. Service consumers Service consumers là người tiêu dùng dịch vụ. Người sử dụng dịch vụ có thể truy cập các dịch vụ điểm cuối từ tài nguyên AWS, chẳng hạn như phiên bản EC2 hoặc từ máy chủ tại chỗ.\nVPC endpoints Người tiêu dùng dịch vụ tạo VPC endpoints để kết nối VPC của họ với endpoint service. Người sử dụng dịch vụ phải chỉ định tên dịch vụ của endpoint service khi tạo VPC endpoints. Có nhiều loại VPC endpoints. Bạn phải tạo loại VPC endpoints mà endpoint service yêu cầu.\nInterface - Tạo Gateway Load Balancer endpoint để gửi lưu lượng TCP đến endpoint service. Lưu lượng truy cập dành cho dịch vụ điểm cuối được giải quyết bằng DNS. GatewayLoadBalancer - Tạo Gateway Load Balancer endpoint để gửi lưu lượng truy cập đến nhóm thiết bị ảo bằng địa chỉ IP riêng. Bạn định tuyến lưu lượng truy cập từ VPC đến Gateway Load Balancer endpoint bằng cách sử dụng route tables. Cân bằng tải cổng phân phối lưu lượng truy cập đến các thiết bị ảo và có thể mở rộng quy mô theo nhu cầu. Có một loại VPC endpoints khác là Gateway, tạo ra một Gateway endpoints để gửi lưu lượng truy cập đến Amazon S3 hoặc DynamoDB. Gateway endpoints không sử dụng AWS PrivateLink, không giống như các loại VPC endpoints* khác. Endpoint network interfaces Endpoint network interfaces là giao diện mạng do người yêu cầu quản lý, đóng vai trò là điểm truy cập cho lưu lượng truy cập đến endpoint service. Đối với mỗi mạng con mà bạn chỉ định khi tạo VPC endpoints , chúng tôi sẽ tạo một Endpoint network interfaces trong mạng con đó.\nNếu VPC endpoints hỗ trợ IPv4 thì Endpoint network interfaces của nó có địa chỉ IPv4. VPC endpoints hỗ trợ IPv6 thì Endpoint network interfaces của nó có địa chỉ IPv6. Địa chỉ IPv6 cho Endpoint network interfaces không thể truy cập được từ internet. Khi bạn mô tả Endpoint network interfaces bằng địa chỉ IPv6, hãy lưu ý rằng denyAllIgwTraffic được bật.\nĐịa chỉ IP của Endpoint network interfaces sẽ không thay đổi trong suốt thời gian tồn tại của VPC endpoints.\nEndpoint policies Endpoint policies là chính sách tài nguyên IAM mà bạn đính kèm vào VPC endpoints. Nó xác định hiệu trưởng nào có thể sử dụng VPC endpoints để truy cập endpoint service. Chính sách VPC endpoints mặc định cho phép mọi hành động của tất cả các hiệu trưởng trên tất cả các tài nguyên trên VPC endpoints.\nEndpoint states Khi bạn tạo VPC endpoints, endpoint service sẽ nhận được yêu cầu kết nối. Nhà cung cấp dịch vụ có thể chấp nhận hoặc từ chối yêu cầu. Nếu nhà cung cấp dịch vụ chấp nhận yêu cầu, thì người sử dụng dịch vụ có thể sử dụng VPC endpoints sau khi nó chuyển sang trạng thái Available. Sau đây là các trạng thái có thể có của điểm cuối VPC:\nPendingAcceptance - Yêu cầu kết nối đang chờ xử lý. Đây là trạng thái ban đầu nếu yêu cầu được chấp nhận theo cách thủ công. Pending - Nhà cung cấp dịch vụ đã chấp nhận yêu cầu kết nối. Đây là trạng thái ban đầu nếu yêu cầu được chấp nhận tự động. Điểm cuối VPC trở về trạng thái này nếu người sử dụng dịch vụ sửa đổi VPC endpoint. *Available - VPC endpoint có sẵn để sử dụng. Rejected - Nhà cung cấp dịch vụ đã từ chối yêu cầu kết nối. Nhà cung cấp dịch vụ cũng có thể từ chối kết nối sau khi kết nối đó sẵn sàng để sử dụng. Expired - Yêu cầu kết nối đã hết hạn. Failed - Không thể cung cấp VPC endpoint. Deleting - Người sử dụng dịch vụ đã xóa điểm cuối VPC và quá trình xóa đang diễn ra. Deleted - VPC endpoint bị xóa. Giới thiệu VPN Site to Site Một trong những cách phổ biến nhất mà khách hàng kết nối an toàn với AWS từ cơ sở là sử dụng giải pháp IPSec VPN được quản lý AWS Site-to-Site VPN. Một lợi ích chính mà khách hàng của chúng tôi tìm kiếm khi sử dụng dịch vụ là không phải quản lý các giải pháp VPN tùy chỉnh hoặc của bên thứ 3 được xây dựng bằng cách sử dụng EC2 instances. Dịch vụ gốc đã được xây dựng để có tính sẵn sàng cao với hai đường hầm ở hai Availability Zones khác nhau và có tích hợp riêng với AWS Transit Gateway (thông qua phần đính kèm VPN) cho phép khách hàng mở rộng quy mô kết nối thành nhiều VPC có một kết nối VPN dựa trên Transit Gateway.\nCác khái niệm Sau đây là các khái niệm chính về VPN Site-to-Site:\nVPN connection: Kết nối an toàn giữa thiết bị tại chỗ và VPC của bạn.\nĐường hầm VPN: Một liên kết được mã hóa nơi dữ liệu có thể truyền từ mạng khách hàng đến hoặc từ AWS.\nMỗi VPN connection bao gồm hai đường hầm VPN mà bạn có thể sử dụng đồng thời để có tính sẵn sàng cao.\nCustomer gateway: Tài nguyên AWS cung cấp thông tin cho AWS về thiết bị Customer gateway của bạn.\nCustomer gateway device: Một thiết bị vật lý hoặc ứng dụng phần mềm ở phía bạn trong kết nối VPN Site-to-Site.\nTarget gateway: Thuật ngữ chung cho điểm cuối VPN ở phía Amazon của kết nối VPN Site-to-Site.\nVirtual private gateway: Virtual private gateway là VPN endpoint ở phía Amazon của kết nối VPN Site-to-Site của bạn và có thể được gắn vào một VPC duy nhất .\nTransit gateway: Một trung tâm chuyển tuyến có thể được sử dụng để kết nối nhiều VPC và mạng tại chỗ, đồng thời làm VPN endpoint cho kết nối VPN Site-to-Site từ phía Amazon.\n"
},
{
	"uri": "/vi/3-createec2/3.1-createnatgw/",
	"title": "Tạo NAT Gateway",
	"tags": [],
	"description": "",
	"content": "Tạo Nat Gateway Tạo một địa chỉ Elastic IP Truy cập EC2 Chọn Elastic IPs Chọn Allocate Elastic IP address Trong giao diện Allocate Elastic IP address Public IPv4 address pool, chọn Amazon’s pool of IPv4 addresses Chọn Allocate Chúng ta vừa tạo thành công một địa chỉ Public IP Address Tạo Nat Gateway Truy cập vào VPC Chọn NAT Gateways Trong giao diện NAT gateway Name, nhập NAT-Provider Subnet, chọn PublicSubnet-Provider Connectivity type, chọn Public Elastic IP allocation ID, chọn Elastic IP vừa tạo. Chọn Create NAT gateway Thành công tạo NAT gateway Edit Route table RTB-PrivateSubnet-Provider và RTB-PublicSubnet-Provider để cho phép các instance bên trong Private subnet truy cập Internet thông qua NAT Truy cập VPC Chọn Route tables Chọn RTB-PrivateSubnet-Provider , chọn tab Route và ấn Edit routes Trong giao diện Edit routes Chọn Add route Điền phần Destination CIDR : 0.0.0.0/0 đại diện cho Internet. Trong phần Target chọn NAT Gateway, sau đó chọn NAT Gateway chúng ta đã tạo. NAT Gateway sẽ được tự động điền. Chọn Save changes 3. Trong giao diện Route tables\nChọn RTB-PublicSubnet-Provider Trong tab Routes, chọn Edit routes Trong giao diện Edit routes Chọn Add route Điền phần Destination CIDR : 0.0.0.0/0 đại diện cho Internet. Trong phần Target chọn Internet Gateway, sau đó chọn Internet Gateway chúng ta đã tạo. Internet Gateway ID sẽ được tự động điền. Chọn Save changes "
},
{
	"uri": "/vi/5-privatelinkconfig/5.1-createtg/",
	"title": "Tạo Target Group",
	"tags": [],
	"description": "",
	"content": "Tạo Target Group Trong giao diện EC2 chọn Target Group Chọn Create target groups Trong giao diện Create target group Chọn Instances trong Choose a target type Target group name nhập TG Protocol:Port, chọn TCP VPC, chọn Provider VPC Health checks, chọn TCP Chọn Next để tiếp tục Trong giao diện Register targets, chọn 2 instance WebServer1* và WebServer2 rồi chọn Include as pending below Chọn Create* Hoàn tất tạo Target groups Chúng ta có thể thấy Health status của Targets đang là Unused vì chưa có Load Balancer nào được liên kết "
},
{
	"uri": "/vi/4-sitetositeconfig/4.1-createvpg/",
	"title": "Tạo Virtual Private Gateway",
	"tags": [],
	"description": "",
	"content": "Tạo Virtual Private Gateway Truy cập vào VPC Chọn Virtual Private Gateway Chọn Create Virtual Private Gateway Trong giao diện Create Virtual Private Gateway Name tag, nhập VPG Chọn Amazon default ASN Chọn Create virtual private gateway Chúng ta cần thực hiện Attach to VPC Chọn Actions Chọn Attach to VPC Trong giao diện Attach to VPC Chọn Consumer VPC. Chọn Attach to VPC Hoàn tất và xem State là Attached "
},
{
	"uri": "/vi/2-prerequiste/2.1-createvpc/",
	"title": "Tạo VPC",
	"tags": [],
	"description": "",
	"content": "Trong buớc này, chúng ta sẽ cần tạo 3 VPC ứng với kiến trúc bên dưới.\nOn-Premise : VPC giả lập môi trường chi nhánh\nConsumer VPC : VPC của bên sử dụng dịch vụ\nProvider VPC : VPC của bên cung cấp dịch vụ\nTổng quan kiến trúc sau khi các bạn hoàn tất bước này sẽ như sau:\nTạo VPC On-Premise Truy cập giao diện AWS Management Console Tìm VPC Chọn VPC Trong giao diện VPC Chọn Your VPC Chọn Create VPC Tiến hành các bước tạo VPC Resource, chọn VPC only\nName tag, nhập On-Premise\nIPv4 CIDR, nhập 10.12.0.0/16\nKéo xuống và chọn Create VPC\nPhần cấu hình Tennacy chúng ta sẽ để ở cơ chế mặc định. Nếu chúng ta chuyển sang Dedicated sẽ có một số EC2 Instance type không phù hợp và sẽ không tạo được trong VPC với tennacy mode là Dedicate\nHoàn thành tạo VPC\nTạo VPC Consumer Làm tương tự vào giao diện VPC Chọn Your VPC rồi chọn Create VPC Tiến hành các bước tạo VPC Resource, chọn VPC only\nName tag, nhập Consumer\nIPv4 CIDR, nhập 10.11.0.0/16\nKéo xuống và chọn Create VPC\nHoàn thành tạo VPC Tạo VPC Provider Làm tương tự vào giao diện VPC Chọn Your VPC rồi chọn Create VPC Tiến hành các bước tạo VPC Resource, chọn VPC only\nName tag, nhập Provider\nIPv4 CIDR, nhập 10.10.0.0/16\nKéo xuống và chọn Create VPC\nHoàn thành tạo VPC "
},
{
	"uri": "/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Trong bài thực hành này, chúng ta sẽ xây dựng một mô hình theo sơ đồ bên dưới: Content Tạo VPC Tạo Subnet Tạo Internet Gateway Tạo Route Table Tạo Security Group "
},
{
	"uri": "/vi/4-sitetositeconfig/4.2-createcg/",
	"title": "Tạo Customer Gateway",
	"tags": [],
	"description": "",
	"content": "Tạo Customer Gateway Truy cập vào VPC Chọn Customer Gateways Chọn Create Customer Gateway Trong giao diện Create Customer Gateway Name tag, nhập CGW IP address, nhập public IP address của máy chủ Customer Gateway. *Chọn Create Customer Gateway Đợi khoảng 5 phút sau, hoàn tất tạo Customer Gateway Lưu ý: theo như mô hình kiến trúc, Customer Gateway sẽ nằm ở VPC trên môi trường onpremise. Hiện tại chúng ta đang làm là khai báo với AWS rằng chúng ta sẽ có 1 Customer Gateway với địa chỉ IP public là địa chỉ public của EC2 instance : Customer Gateway nằm trong On-Premise VPC\n"
},
{
	"uri": "/vi/3-createec2/3.2-createec2/",
	"title": "Tạo máy chủ EC2",
	"tags": [],
	"description": "",
	"content": "Tạo EC2 Customer GW Truy cập AWS Management Console Tìm EC2 Chọn EC2 Trong giao diện EC2 Chọn Instances Chọn Launch instances Name của instance, nhập Customer GW Thực hiện chọn AMI Chọn Quick Start Chọn Amazon Linux 2 AMI (HVM) Thực hiện chọn Instance type: t2.micro và Chọn Create new key pair Trong giao diện Cretae key pair Key pair name, nhập Workshop1 (tên tùy chọn, bạn có thể đặt bất kỳ). Key pair type, chọn RSA Private key file format, chọn .pem Thực hiện cấu hình Network Trong mục Network settings, chọn Edit VPC, chọn On-Premise VPC\nSubnet, chọn PublicSubnet-OnPremise\nAuto-assign public IP, chọn Enable\nFirewall (Security Group), chọn ** Create security group**\nSecurity group name, nhập SG-PublicSubnet Description, nhập SSH,Ping,IPSEC,HTTP Trong Inbound rules, click Add rule.\nChọn Type: SSH và Source type: Anywhere. Anywhere đại diện cho bất kỳ địa chỉ IPv4 nào\nChọn Add rule để thêm 1 rule mới.\nChọn Type: Custom TCP, Port range: 500, Source type: Anywhere\nChọn Type: Custom UDP, Port range: 400, Source type: Anywhere\nChọn Type: All ICMP - IPv4 và Source: Anywhere. Cho phép ping từ bất kì địa chỉ IP nào.\nChọn Add rule để thêm 1 rule mới.\nChọn Type : HTTP và Source: Anywhere. Cho phép truy cập HTTP từ bất kỳ địa chỉ IP nào. Mặc định Outbound rules sẽ cho phép all traffic truy cập ra ngoài\nChọn Launch instance và hoàn thành Tạo EC2-Consumer Tương tự, trong giao diện EC2 Chọn Instances Chọn Launch instances Name của instance, nhập EC2-Consumer Thực hiện chọn AMI Chọn Quick Start Chọn Amazon Linux 2 AMI (HVM) Thực hiện chọn Instance type: t2.micro Key pair name, chọn Workshop1 Thực hiện cấu hình Network Trong mục Network settings, chọn Edit VPC, chọn Consumer VPC Subnet, chọn PrivateSubnet1-Consumer Firewall (Security Group), chọn Create security group Security group name, nhập SG-PrivateSubnet-Consumer Description, nhập HTTP,Ping,SSH Trong Inbound rules, click Add rule Chọn Type: SSH và Source type: Anywhere. Anywhere đại diện cho bất kỳ địa chỉ IPv4 nào Chọn Add rule để thêm 1 rule mới. Chọn Type: All ICMP - IPv4 và Source: Anywhere. Cho phép ping từ bất kì địa chỉ IP nào. Chọn Add rule để thêm 1 rule mới. Chọn Type: HTTP và Source: Anywhere. Cho phép truy cập HTTP từ bất kỳ địa chỉ IP nào. Chọn Launch instance và hoàn thành Tạo Webserver1 Tương tự, trong giao diện EC2 Chọn Instances Chọn Launch instances Name của instance, nhập WebServer1 Thực hiện chọn AMI Chọn Quick Start Chọn Amazon Linux 2 AMI (HVM) Thực hiện chọn Instance type: t2.micro Key pair name, chọn Workshop1 Thực hiện cấu hình Network Trong mục Network settings, chọn Edit VPC, chọn Provider VPC Subnet, chọn PrivateSubnet1-Provider Firewall (Security Group), chọn Select existing security group Common sercurity groups, chọn SG-PrivateSubnet-Provider đã tạo ở phần trước 6.Cấu hình Advanced details Kéo xuống mục User data nhập : #!/bin/bash\rsudo su yum update -y\ryum install -y httpd.x86_64\rsystemctl start httpd.service\rsystemctl enable httpd.service\recho \u0026#34; \u0026lt;h1\u0026gt;Hello, This is Webserver1 \u0026lt;/h1\u0026gt; \u0026#34; \u0026gt; /var/www/html/index.html 7. Chọn Launch instance và hoàn thành\nTạo Webserver2 Tương tự, trong giao diện EC2 Chọn Instances Chọn Launch instances Name của instance, nhập WebServer2 Thực hiện chọn AMI Chọn Quick Start Chọn Amazon Linux 2 AMI (HVM) Thực hiện chọn Instance type: t2.micro Key pair name, chọn Workshop1 Thực hiện cấu hình Network Trong mục Network settings, chọn Edit VPC, chọn Provider VPC Subnet, chọn PrivateSubnet2-Provider Firewall (Security Group), chọn Select existing security group Common sercurity groups, chọn SG-PrivateSubnet-Provider đã tạo ở phần trước Cấu hình Advanced details Kéo xuống mục User data nhập : #!/bin/bash\rsudo su yum update -y\ryum install -y httpd.x86_64\rsystemctl start httpd.service\rsystemctl enable httpd.service\recho \u0026#34; \u0026lt;h1\u0026gt;Hello, This is Webserver2 \u0026lt;/h1\u0026gt; \u0026#34; \u0026gt; /var/www/html/index.html 7. Chọn Launch instance và hoàn thành\n"
},
{
	"uri": "/vi/5-privatelinkconfig/5.2-createnlb/",
	"title": "Tạo Network Load Balancer",
	"tags": [],
	"description": "",
	"content": "Tạo Network Load balancer Trong giao diện EC2 chọn Load balancers Chọn Create load balancer Tạo Network Load Balancer Trong giao diện Create load balancer, chọn Create trong mục *Network Load Balancer Load balancer name, nhập NLB Scheme, chọn Internal VPC, chọn Provider VPC Mappings chọn map ở với PrivateSubnet1-Provider ở AZ us-east-1a và PrivateSubnet2-Provider ở AZ us-ease-1b Security groups, chọn SG-PrivateSubnet-Provider Trong phần Listeners and routing,mục Default action chọn TG vừa tạo Chọn Create hoàn thành tạo Network Load Balancer 3.Kiểm tra Healthcheck status của Target groups Sau khi tạo Network Load Balancer, Healthcheck status của Target groups đang là Initial Sau khoảng thời gian 5 lần Health check được cấu hình mặc định, trạng thái sẽ chuyển sang Healthy "
},
{
	"uri": "/vi/2-prerequiste/2.2-createsubnet/",
	"title": "Tạo Subnet",
	"tags": [],
	"description": "",
	"content": "Tạo Subnet Trong giao diện VPC Chọn Subnet\nChọn Create subnet\nTrong giao diện ** Create subnet** Chọn On-Premise VPC Thực hiện subnet settings Subnet name, nhập ``` PublicSubnet-OnPremise**\nChọn AZ us-ease-1a\nIpv4 CIDR block , nhập 10.12.1.0/24\nKéo xuống và nhấn Create subnet*\n4. Hoàn thành tạo subnet\nThực hiện tương tự tạo thêm các subnet PrivateSubnet1-Consumer thuộc Consumer VPC với CIDR là 10.11.1.0/24 nằm trong Availability Zone us-east-1a PrivateSubnet2-Consumer thuộc Consumer VPC với CIDR là 10.11.2.0/24 nằm trong Availability Zone us-east-1b PrivateSubnet1-Provider thuộc Provider VPC với CIDR là 10.10.1.0/24 nằm trong Availability Zone us-east-1a PrivateSubnet2-Provider thuộc Provider VPC với CIDR là 10.10.2.0/24 nằm trong Availability Zone us-east-1b PublicSubnet-Provider thuộc Provider VPC với CIDR là 10.10.3.0/24 nằm trong Availability Zone us-east-1a Bạn có thể thấy có 2 cột là Availability Zone và Availability Zone ID. Để tránh việc tài nguyên EC2 được sử dụng không đồng đều, (chúng ta thường có xu hướng dùng AZ a để chạy primary và AZ b để stand by chẳng hạn) nên AWS sẽ gán ngẫu nhiên Availability Zone vào Availability Zone ID. Chúng ta có thể hiểu rằng Availability Zone là 1 dạng alias , còn Availability Zone ID mới chính là yếu tố định danh. Ví dụ ở hình trên Availability Zone ap-southeast-1a được gán Availability Zone ID là apse1-az2. Ở một AWS account khác , Availability Zone ap-southeast-1a có thể có Availability Zone ID là apse1-az1.\nThực hiện bật Enable auto-assign public IPv4 address cho các Public subnet Chọn PublicSubnet-OnPremise , chọn Actions, chọn Edit subnet settings Chọn Enable auto-assign public IPv4 address\nNhấn Save\nTương tự thực hiện với PublicSubnet-Provider\nChọn PublicSubnet-OnPremise , chọn Actions, chọn Edit subnet settings\nChọn Enable auto-assign public IPv4 address\nNhấn Save\nMột điểm đáng chú ý nữa là các subnet về cơ bản đều giống nhau, thông qua cấu hình route table và cấp phát public IP address mà chúng ta mới phân chia ra Public và Private Subnet.\n"
},
{
	"uri": "/vi/3-createec2/3.3-createec2ice/",
	"title": "Tạo EC2 Instance Connect Endpoint",
	"tags": [],
	"description": "",
	"content": "TẠO EC2 INSTANCE CONNECT ENDPOINT Thônng thường để truy cập vào EC2 Private bạn cần phải:\nDùng công cụ pscp để copy key pair từ máy của chúng ta vào EC2 Public Truy cập vào EC2 Public Cấp quyền cho key pair SSH tới máy chủ EC2 Private -\u0026gt; Như bạn thấy, lúc này EC2 Public đóng vai trò như Bastion Host và chúng ta cần trả chi phí cho instance này. Vậy liệu có cách nào giúp tiết kiệm chi phí, giảm các bước cấu hình mà vẫn truy cập vào EC2 Private và đảm bảo tính bảo mật hay không? Vào 13/06/2023, AWS ra mắt chức năng EC2 Instance Connect Endpoint (EIC Endpoint) đế giúp cho khách hàng truy cập vào EC2 instance mà không cần đến public IP addresses, thông qua giao thức SSH và RDP.\nEIC Endpoint thay thế Bastion Host, đồng nghĩa loại bỏ khối lượng công việc: patching, managing, auditting và chi phí Bastion Host instance trước đây. Không có chi phí bổ sung dối với EIC Endpoint, tuy nhiên chi phí data transfer sẽ được áp dụng\nTạo EC2 Instance Connect Endpoint cho EC2 trong private subnet của Consumer VPC instance Truy cập vào VPC Trong giao diện VPC, chọn Endpoint Chọn Create endpoint Trong giao diện Create endpoint Tại mục Name tag, nhập: EC2IEC-Cunsumer Tại mục Service category, chọn: EC2 Instance Connect Endpoint Tại mục VPC, chọn Consumer VPC Tại mục Security groups, chọn: SG-PrivateSubnet-Consumer Tại mục Subnet, chọn: PrivateSubnet1-Consumer Chọn Create endpoint Thành công tạo Endpoint Đợi Status chuyển từ Pending thành Available Tạo EC2 Instance Connect Endpoint cho EC2 trong private subnet của Provider VPC instance Truy cập vào VPC Trong giao diện VPC, chọn Endpoint Chọn Create endpoint Trong giao diện Create endpoint Tại mục Name tag, nhập: EC2IEC-Cunsumer Tại mục Service category, chọn: EC2 Instance Connect Endpoint Tại mục VPC, chọn Provider VPC Tại mục Security groups, chọn: SG-PrivateSubnet-Provider Tại mục Subnet, chọn: PrivateSubnet1-Provider Chọn Create endpoint Thành công tạo Endpoint Đợi Status chuyển từ Pending thành Available ###Truy cập EC2-Consumer Private thông qua EC2 Instance Connect Endpoint Tại giao diện EC2 Tích vào ô vuông của EC2-Consumer Tại mục Public IPv4 address, kiểm tra và nhận thấy: không có giá trị Public IP - có nghĩa chúng ta không thể truy cập vào EC2 này thông qua Public IP Chọn Connect Tại giao diện Connect Tại mục Connection Type chọn Connect using EC2 Instance Connect Endpoint Tại mục EC2 Instance Connect Endpoint chọn EIC EC2IEC-Consumer Chọn Connect Truy cập thành công EC2 Private thông qua EC2 Instance Connect Endpoint Truy cập EC2 WebServer1 Private thông qua EC2 Instance Connect Endpoint Tại giao diện EC2 Tích vào ô vuông của WebServer1 Tại mục Public IPv4 address, kiểm tra và nhận thấy: không có giá trị Public IP - có nghĩa chúng ta không thể truy cập vào EC2 này thông qua Public IP Chọn Connect Tại giao diện Connect Tại mục Connection Type chọn Connect using EC2 Instance Connect Endpoint Tại mục EC2 Instance Connect Endpoint chọn EIC EC2IEC-Provider Chọn Connect Truy cập thành công EC2 Private thông qua EC2 Instance Connect Endpoint Truy cập EC2 WebServer2 Private thông qua EC2 Instance Connect Endpoint Tại giao diện EC2 Tích vào ô vuông của WebServer2 Tại mục Public IPv4 address, kiểm tra và nhận thấy: không có giá trị Public IP - có nghĩa chúng ta không thể truy cập vào EC2 này thông qua Public IP Chọn Connect Tại giao diện Connect Tại mục Connection Type chọn Connect using EC2 Instance Connect Endpoint Tại mục EC2 Instance Connect Endpoint chọn EIC EC2IEC-Provider Chọn Connect Truy cập thành công EC2 Private thông qua EC2 Instance Connect Endpoint Lưu ý: Thông thường, bạn sẽ làm lab bằng user có quyền Admin, trong trường hợp ngược lại, bạn cần tham khảo thêm tài liệu để cấp quyền cho User được phép thao tác các bước như trên. IAM permissions to use EC2 Instance Connect Endpoint\n"
},
{
	"uri": "/vi/5-privatelinkconfig/5.3-createendpointservice/",
	"title": "Tạo Endpoint Service",
	"tags": [],
	"description": "",
	"content": "Tạo Endpoint Services Trong VPC, chọn Endpoint services và chọn Create endpoint service Trong Create endpoint service Nhập Name là PrivateLink Load balancer type, chọn Network Available load balancers, chọn NLB và chọn Create để tạo Hoàn tất tạo Endpoint services Copy Service name để phục vụ việc tạo Endpoint "
},
{
	"uri": "/vi/2-prerequiste/2.3-createigw/",
	"title": "Tạo Internet Gateway",
	"tags": [],
	"description": "",
	"content": "Tạo Internet Gateway Trong giao diện VPC Chọn ** Internet Gateways**\nChọn ** Create internet gateway**\nThực hiện cấu hình Name tag, nhập IGW-OnPremise\nChọn Create internet gateway\nHoàn thành tạo Internet Gateway và thực hiện Attach VPC Chọn Actions\nChọn Attach to VPC\nChọn On-Premise, VPC ID sẽ được điền tự động\nChọn ** Attach internet gateway**\nKhi attach thành công State Internet gateway sẽ chuyển sang Attached Tương tự thực hiện tạo Internet Gateway và attach vào VPC Provider Name tag, nhập IGW-Provider Chọn Create internet gateway Chọn On-Provider, VPC ID sẽ được điền tự động Chọn Attach internet gateway "
},
{
	"uri": "/vi/3-createec2/",
	"title": "Tạo máy chủ EC2",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ thực hiện tạo các máy chủ EC2 ( EC2 instance) theo kiến trúc sau Nội dung Tạo NAT Gateway Tạo máy chủ EC2 Tạo EC2 Instance Connect Endpoint "
},
{
	"uri": "/vi/4-sitetositeconfig/4.3-createvpnconnection/",
	"title": "Tạo VPN Connection",
	"tags": [],
	"description": "",
	"content": "Tạo kết nối VPN Truy cập VPC Chọn Site-to-Site VPN Connections Chọn Create VPN Connection Trong giao diện Create VPN Connection Name tag, nhập VPN Target Gateway Type: Chọn VPG Virtual Private Gateway: Chọn VPN Gateway Customer Gateway: Existing Customer Gateway ID: Chọn CWG Tiếp tục thực hiện cấu hình Routing Options: Static Static IP Prefixes: 10.12.0.0/16. Đây là giải địa chỉ IP ở môi trường Onpremise giả lập. Các cấu hình khác giữ nguyên mặc định. Chọn Create VPN Connection Hoàn tất tạo VPN Connection, đợi khoảng 5p trạng thái sẽ chuyển sang Available Cấu hình propagation cho RTB-PrivateSubnet-Consumer* Trong giao diện VPC, chọn Route tables Chọn RTB-PrivateSubnet-Consumer Chọn Route Propagation Chọn Edit route propagation Trong giao diện Edit route propagation Chọn Enable Chọn Save Hoàn tất và kiểm tra lại Route Propagation đã chuyển sang Yes "
},
{
	"uri": "/vi/4-sitetositeconfig/4.4-configcg/",
	"title": "Cấu hình Customer Gateway",
	"tags": [],
	"description": "",
	"content": "Cấu hình Customer Gateway Truy cập vào VPC Chọn Site-to-Site VPN Connection Chọn VPN Connection đã tạo Chọn Download Configuration Trong hộp thoại Download Configuration, lựa chọn appliance phù hợp với bạn: Trong bài thực hành này, chúng ta sẽ sử dụng OpenSwan. Vendor: Chọn OpenSwan Platform: Chọn OpenSwan Software: Chọn OpenSwan 2.6.38+ IKE version: Chọn ikev1 Chọn Download. Lưu thông tin file câu hình vào thư mục chúng ta sử dụng lưu trữ key pair và công cụ cho bài lab. Sau đó dựa vào cấu hình được cung cấp, bạn thay đổi các thông tin phù hợp và cấu hình cho thiết bị của mình. Kết nối vào EC2 Customer Gateway Trong giao diện EC2 chọn Instances, chọn Customer GW* , chọn Connect Trong giao diện Connect to instance Tại mục Connection Type chọn Connect using EC2 Instance Connect, vì Customer GW thuộc Public subnet nên chúng ta sử dụng EC2 Instance Connect Chọn Connect Hoàn tất kết nối Cài đặt OpenSwan sudo su\ryum install openswan -y 5. Kiểm tra cấu hình file /etc/ipsec.conf\nvi /etc/ipsec.conf Kiểm tra cấu hình như hình dưới. Ấn phím ESC và tổ hợp :q! để thoát khỏi trình chỉnh sửa vi. Cấu hình file /etc/sysctl.conf vi /etc/sysctl.conf Ấn phím i để tiến hành chỉnh sửa file. Thêm cấu đoạn sau vào cuối tập tin cấu hình net.ipv4.ip_forward = 1\rnet.ipv4.conf.all.accept_redirects = 0\rnet.ipv4.conf.all.send_redirects = 0 Ấn phím ESC và tổ hợp :wq! để lưu file cấu hình Sau đó để áp dụng cấu hình này, chạy lệnh: sysctl -p 8. Tiếp theo chúng ta sẽ cấu hình file /etc/ipsec.d/aws.conf\nvi /etc/ipsec.d/aws.conf Ấn phím i để tiến hành chỉnh sửa file. Thêm cấu đoạn sau vào tập tin cấu hình. Chúng ta sẽ tạo 2 Tunnel với thông tin được lấy từ file cấu hình VPN Connection bạn đã tải về và lưu chung vào thư mục chứa key pair trước đó. Đảm bảo bạn chỉnh sửa địa chỉ IP và lớp mạng phù hợp trước khi copy đoạn cấu hình trên. Đối với Amazon Linux thì chúng ta sẽ bỏ dòng auth=esp trong file cấu hình gốc. Vì chúng ta chỉ có 1 public IP addres cho Customer Gateway nên sẽ cần thêm cấu hình overlapip=yes. leftid: IP Public Address phía OnPremise. ( Ở đây chính là IP public của EC2 Customer GW trong On-Premise VPC) . right: IP Public Address phía AWS VPN Tunnel. leftsubnet: CIDR của Mạng phía Local (Nếu có nhiều lớp mạng, bạn có thể để là 0.0.0.0/0). rightsubnet: CIDR của Mạng phía Private Subnet trên AWS. conn Tunnel1\rauthby=secret\rauto=start\rleft=%defaultroute\rleftid=3.88.57.67\rright=34.226.49.224\rtype=tunnel\rikelifetime=8h\rkeylife=1h\rphase2alg=aes128-sha1;modp1024\rike=aes128-sha1;modp1024\rkeyingtries=%forever\rkeyexchange=ike\rleftsubnet=10.12.0.0/16\rrightsubnet=10.11.0.0/16\rdpddelay=10\rdpdtimeout=30\rdpdaction=restart_by_peer\roverlapip=yes\rconn Tunnel2\rauthby=secret\rauto=start\rleft=%defaultroute\rleftid=3.88.57.67\rright=52.70.128.251\rtype=tunnel\rikelifetime=8h\rkeylife=1h\rphase2alg=aes128-sha1;modp1024\rike=aes128-sha1;modp1024\rkeyingtries=%forever\rkeyexchange=ike\rleftsubnet=10.12.0.0/16\rrightsubnet=10.11.0.0/16\rdpddelay=10\rdpdtimeout=30\rdpdaction=restart_by_peer\roverlapip=yes Ấn phím ESC và tổ hợp :wq! để lưu file cấu hình Kiểm tra bước tiếp theo trong file cấu hình chúng ta đã tải xuống.\nTạo mới và cấu hình file etc/ipsec.d/aws.secrets Tạo tập tin mới với cấu hình sau để thiết lập chứng thực cho 2 Tunnel.\nChạy lệnh vi /etc/ipsec.d/aws.secrets để tạo tập tin và cấu hình touch /etc/ipsec.d/aws.secrets Ấn phím i để tiến hành chỉnh sửa file. Thêm đoạn cấu hình sau vào cuối tập tin cấu hình (đoạn cấu hình này ở bước 5 của IPSEC Tunnel #1 và IPSEC Tunnel #2) Ấn phím ESC và tổ hợp :wq! để lưu file cấu hình Khởi động lại Network service \u0026amp; IPSEC service systemctl restart network systemctl enable ipsec.service\rsystemctl start ipser.service\rsystemctl status ipser.service Nếu status tunnel vẫn chưa chạy đúng, sau khi kiểm tra và cập nhật cấu hình bạn sẽ cần chạy lệnh để restart lại service network và IPsec : systemctl restart network systemctl restart ipsec.service 12. Sau khi dịch vụ đã chạy, chờ 1 vài phút rồi thử thực hiện lệnh ping từ phía máy chủ Customer Gateway tới máy chủ EC2 Consumer. Nếu cấu hình VPN thành công bạn sẽ được kết quả như dưới đây.\nping \u0026lt;EC2 Private IP\u0026gt; "
},
{
	"uri": "/vi/4-sitetositeconfig/",
	"title": "Cấu hình VPN Site to Site",
	"tags": [],
	"description": "",
	"content": "Chúng ta có thể kết nối TTDL On-premise tới Amazon VPC sử dụng VPN cứng hoặc mềm tùy thuộc mục đích và nhu cầu sử dụng thực thế. Để thiết lập kết nối VPN Site to Site, chúng ta sẽ cần tạo và cấu hình Virtual Private Gateway VPG và Customer Gateway CGW.\nVirtual Private Gateway (VPG) là một trung tâm điều khiển kết nối the virtual private network (VPN) được cài đặt ở đầu AWS. A Customer Gateway (CGW) là thành phần đại diện cho thiết bị VPN cứng hoặc mềm được cài đặt ở đầu Khách hàng. VPN tunnel sẽ được thiết lập ngay sau khi lưu lượng dữ liệu được truyền tải giữa AWS và hệ thống mạng của khách hàng. Trong kết nối đó, ta phải chỉ rõ loại định tuyến sẽ được sử dụng để đảm bảo an toàn cũng như chất lượng về mặt truyền tải dữ liệu. Nếu CGW ở phía khách hàng có hỗ trợ Border Gateway Protocol (BGP), thì trong cấu hình VPN connection ta bắt buộc phải đặt định tuyến là dynamic routing. Còn ngược lại ta phải cấu hình định tuyến kết nối là static routing. Trường hợp sử dụng static routing, ta phải nhập chính xác những định tuyến cần thiết cho việc kết nối từ phía Khách hàng tới VPG được thiết lập ở đầu AWS. Đồng thời định tuyến cho VPC cũng phải được cấu hình propagated để cho phép các tài nguyên có thể trao đổi dữ liệu đi ra và đi vào trong kết nối VPN tunnel giữa AWS với hệ thống mạng của Khách hàng. Amazon VPC cung cấp nhiều loại CGWs, và từng CGW được gán với một VPG nhưng 1 VPG có thể kết hợp với nhiều CGW (many-to-one design). Để hỗ trợ mô hình này thì địa chỉ IP của CGW phải là duy nhất trong một region. Amazon VPC cũng cung cấp các thông tin cần thiết cho Nhân viên quản trị mạng có thể cấu hình CGWvà thiết lập kết nối VPN tới VPG trên AWS. Kết nối VPNluôn bao gồm 2 Internet Protocol Security (IPSec) tunnels để đảm bảo tính sẵn sàng cao của kết nối. Bên dưới là những đặc điểm quan trọng mà ta cần nắm về VPG, CGW, and VPN:\nVPG là thành phần đầu cuối của VPN tunnel nằm trên AWS. CGW có thể là thiết bị phần cứng hoặc ứng dụng phần mềm nằm ở đầu Khách hàng trong kết nối VPN tunnel. Bạn phải khởi tạo kết nối VPN tunnel từ CGWtới VPG. VPG hỗ trợ cả dynamic routing (BGP) và static routing. Kết nối VPN luôn có 2 tunnels nhằm đảm bảo tính sẵn sàng cao cho kết nối với VPC từ site Khách hàng. Bài lab giúp chúng ta học được cách thiết lập một kết nối Site to Site VPN trong AWS. Trong thực tế, giải pháp này khá được ưa chuộng do ưu điểm giá thành rẻ, đồng thời rất dễ cấu hình do AWS cung cấp hướng dẫn cho từng loại thiết bị phía đầu Customer. Việc Customer bận tâm duy nhất đó là chuẩn bị đường internet để từ đó tạo đường hầm an toàn bí mật (sử dụng IPSec) kết nối tới AWS thông qua AWS VPN tunnel. Trong phạm vi bài lab, giả lập rằng chúng ta có Main office ( VPC Consumer ) và Branch office ( VPC Customer ) đặt tại 2 VPC . Trên mỗi VPC thực hiện tạo EC2 cho phép SSH từ bên ngoài, nhưng không có khả năng kết nối và ping lẫn nhau sử dụng địa chỉ Private IP của mỗi EC2. Việc ta cần làm là cấu hình VPN để các địa chỉ Private IP có thể ping được lẫn nhau sử dụng VPN Site-to-Site. Nội dung Tạo Virtual Private Gateway Tạo Customer Gateway Tạo VPN Connection Cấu hình Customer Gateway "
},
{
	"uri": "/vi/5-privatelinkconfig/5.4-createendpoint/",
	"title": "Tạo Endpoint",
	"tags": [],
	"description": "",
	"content": "Tạo Endpoint Trong VPC, chọn Endpoint và chọn Create endpoint Trong Create endpoint Name tag, nhập EndpointPrivateLink Service category, chọn Other endpoint services Service name, nhập Service name ở bước vừa rồi đã copy và ấn Verify service VPC, chọn Consumer VPC Subnet chọn cả 2 private subnet ở 2 AZ để có thể hoạt động với NLB trên cả 2 AZ Security groups, chọn SG-PrivateSubnet-Consumer Chọn Create endpoint Hoàn tất tạo Endpoint Ta có thể thấy trạng thái đang là Pending acceptance Chấp nhận yêu cầu kết nối Endpoint Để chấp nhận yêu cầu kết nối Endpoint, trong VPC, chọn Endpoint services Chọn PrivateLink, chọn tab Endpoint connections, chọn Endpoint connection đang chờ accept, chọn Action, chọn Accept endpoint connection request Nhập accept và chọn Accept Hoàn tất Accept và kiểm tra trạng thái Chờ State chuyển sang Available "
},
{
	"uri": "/vi/2-prerequiste/2.4-creatertb/",
	"title": "Tạo Route Table",
	"tags": [],
	"description": "",
	"content": "Tạo Route Table Tạo Route Table cho PublicSubnet-OnPremise Trong giao diện VPC Chọn Route Tables Chọn Create route table Tiến hành cấu hình Route table Name, nhập RTB-PublicSubnet-OnPremise VPC, chọn On-Premise VPC, VPC id sẽ tự động được điền vào Chọn Create route table Hoàn thành tạo Route table Thực hiện Edit subnet associations Chọn Subnet associations Chọn Edit subnet associations 5. Trong bước Edit subnet associations\nChọn PublicSubnet-OnPremise Chọn ** Save associations** 6. Thực hiện Edit route định tuyến đi ra ngoài internet thông qua Internet Gateway\nChọn Edit routes Trong giao diện Edit routes Chọn Add route Điền phần Destination CIDR : 0.0.0.0/0 đại diện cho Internet. Trong phần Target chọn Internet Gateway, sau đó chọn Internet Gateway chúng ta đã tạo. Internet Gateway ID sẽ được tự động điền. Chọn Save changes Hoàn thành và kiểm tra lại Routes Tạo Route Table cho PrivateSubnet-Consumer Trong giao diện VPC Chọn Route Tables Chọn Create route table Tiến hành cấu hình Route table Name, nhập RTB-PrivateSubnet-Consumer VPC, chọn Consumer VPC, VPC id sẽ tự động được điền vào Chọn Create route table Hoàn thành tạo Route table Thực hiện Edit subnet associations Chọn Subnet associations Chọn Edit subnet associations Trong bước Edit subnet associations Chọn PrivateSubnet1-Consumer và PrivateSubnet2-Consumer Chọn ** Save associations** Tạo Route Table cho PrivateSubnet-Provider Trong giao diện VPC Chọn Route Tables Chọn Create route table Tiến hành cấu hình Route table Name, nhập RTB-PrivateSubnet-Provider VPC, chọn Provider VPC, VPC id sẽ tự động được điền vào Chọn Create route table Hoàn thành tạo Route table Thực hiện Edit subnet associations Chọn Subnet associations Chọn Edit subnet associations Trong bước Edit subnet associations Chọn PrivateSubnet1-Provider và PrivateSubnet2-Provider Chọn ** Save associations** Tạo Route Table cho PublicSubnet-Provider Trong giao diện VPC Chọn Route Tables Chọn Create route table Tiến hành cấu hình Route table Name, nhập RTB-PublicSubnet-Provider VPC, chọn Provider VPC, VPC id sẽ tự động được điền vào Chọn Create route table Hoàn thành tạo Route table Thực hiện Edit subnet associations Chọn Subnet associations Chọn Edit subnet associations Trong bước Edit subnet associations Chọn PublicSubnet-Provider Chọn ** Save associations** "
},
{
	"uri": "/vi/5-privatelinkconfig/",
	"title": "Cấu hình PrivateLink",
	"tags": [],
	"description": "",
	"content": "Cấu hình PrivateLink theo kiến trúc sau Nội dung Tạo Target Group Tạo Network Load Balancer Tạo Endpoint Service Tạo Endpoint "
},
{
	"uri": "/vi/2-prerequiste/2.5-createsg/",
	"title": "Tạo Security Group",
	"tags": [],
	"description": "",
	"content": "Tạo Security Group cho máy chủ nằm trong PrivateSubnet-Provider Trong giao diện VPC Chọn Security Group Chọn Create security group Thực hiện cấu hình Security group Security Group name, nhập SG-PrivateSubnet-Provider Description, nhập Allow SSH,Ping,HTTP Chọn Provider VPC Thực hiện cấu hình Inbound rules Trong Inbound rules, click Add rule.\nChọn Type: SSH và Source: Anywhere. Anywhere đại diện cho bất kỳ địa chỉ IPv4 nào\nChọn Add rule để thêm 1 rule mới.\nChọn Type: All ICMP - IPv4 và Source: Anywhere. Cho phép ping từ bất kì địa chỉ IP nào.\nChọn Add rule để thêm 1 rule mới.\nChọn Type : HTTP và Source: Anywhere. Cho phép truy cập HTTP từ bất kỳ địa chỉ IP nào.\nMặc định Outbound rules sẽ cho phép all traffic truy cập ra ngoài Chọn Create security group Hoàn thành tạo security group cho máy chủ nằm trong Public subnet "
},
{
	"uri": "/vi/6-result/",
	"title": "Kết quả",
	"tags": [],
	"description": "",
	"content": "Kiểm tra kết quả Trong VPC, chọn Endpoints, chọn vào EndpointPrivateLink và copy DNS names để kiểm tra kết nối từ On-Premise tới Provider và từ Consumer tới Provider VPC Có 3 dòng DNS names , 1 dòng đầu tiên là DNS name ứng với dịch vụ ở cả 2 AZ, 2 dòng dưới tương ứng với từng AZ Trên máy EC2-Consumer Thực hiện lệnh curl \u0026lt;DNS name\u0026gt; hoặc\ncurl \u0026lt;Ip\u0026gt;:80 IP là địa chỉ IP private của 2 Webserver ở Provider VPC Ta được kết quả Trên máy Customer GW Thực hiện lệnh curl \u0026lt;DNS name\u0026gt; Ta được kết quả "
},
{
	"uri": "/vi/7-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Dọn dẹp tài nguyên Chúng ta sẽ tiến hành xóa các tài nguyên theo thứ tự sau\nTerminate các EC2 Instance. Terminate EC2 instance. Truy cập Amazon EC2 console tại địa chỉ EC2. Trên thanh điều hướng bên trái, chọn Intances Chọn tất cả EC2 Instance liên quan tới bài lab. Chọn Instance state Chọn Terminate instance Xác nhận terminate. Xóa NAT Gateway, Elastic IP Address Xóa NAT Gateway và Elastic IP Address. AWS sẽ thu tiền cho các EIP lãng phí nên bạn cần kiểm tra kỹ để tránh bị trừ chi phí ngoài ý muốn. Truy cập trang Amazon VPC console tại địa chỉ VPC Trên thanh điều hướng bên trái , click NAT Gateway. Chọn NAT Gateway. Click Action. Click Delete NAT Gateway. Gõ delete. Click Delete để xác nhận xóa NAT Gateway Xóa Elastic IP Address Tiếp tục xóa Elastic IP Address. Truy cập trang Amazon VPC console tại địa chỉ https://console.aws.amazon.com/vpc/ Trên thanh điều hướng bên trái , click Elastic IP. Chọn Elastic IP Address chúng ta đã tạo. Click Action. Click Release Elastic IP Address Click Release. Xóa EC2 Instance connect endpoint Truy cập vào giao dịch Endpoint Chọn Action, chọn Delete VPC endpoints Nhập delete Tiếp tục làm tương tự và xóa theo thứ tự sau nhé VPN Site to Site connection. Virtual Private Gateway Customer Gateway Endpoint services Network Load Balancer Target Groups Provider VPC Consumer VPC On-Premise VPC "
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]